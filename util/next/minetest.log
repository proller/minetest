



!!!!!!!!!!!!!!!!!
 Merge proller/liquid_default to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      minetest.conf.example
#	both modified:      src/defaultsettings.cpp
#	both modified:      src/environment.cpp
#	both modified:      src/server.cpp
#
no changes added to commit (use "git add" and/or "git commit -a")
diff --cc minetest.conf.example
index 55219b4,bdf50b1..0000000
--- a/minetest.conf.example
+++ b/minetest.conf.example
@@@ -92,7 -92,7 +92,11 @@@
  # Enable a bit lower water surface; disable for speed (not quite optimized)
  #new_style_water = false
  # Constant volume liquids
++<<<<<<< HEAD
 +#liquid_finite = false
++=======
+ #liquid_finite = true
++>>>>>>> proller/liquid_default
  # Update liquids every .. recommend for finite: 0.2
  #liquid_update = 0.4
  # Send to client updated liquid every (increase on high loaded servers with liquid_finite)
diff --cc src/defaultsettings.cpp
index c6db033,3cd187f..0000000
--- a/src/defaultsettings.cpp
+++ b/src/defaultsettings.cpp
@@@ -219,7 -220,7 +219,11 @@@ void set_default_settings(Settings *set
  	settings->setDefault("movement_gravity", "9.81");
  
  	//liquid stuff
++<<<<<<< HEAD
 +	settings->setDefault("liquid_finite", "false");
++=======
+ 	settings->setDefault("liquid_finite", "true");
++>>>>>>> proller/liquid_default
  	settings->setDefault("liquid_update", "0.4");
  	settings->setDefault("liquid_send", "1.0");
  	settings->setDefault("liquid_relax", "2");
diff --cc src/environment.cpp
index 8bd44d8,e259db1..0000000
--- a/src/environment.cpp
+++ b/src/environment.cpp
@@@ -666,8 -662,10 +666,15 @@@ public
  				if(i->timer < trigger_interval)
  					continue;
  				i->timer -= trigger_interval;
++<<<<<<< HEAD
 +				if (i->timer > trigger_interval*2)
 +					i->timer = 0;
++=======
+ 				if (i->timer > trigger_interval*2) {
+ 					//errorstream << "env abm timer oveload t="<<i->timer<< " i="<<trigger_interval<<" as="<<abms.size()<<std::endl;
+ 					i->timer = 0;
+ 				}
++>>>>>>> proller/liquid_default
  				actual_interval = trigger_interval;
  			}
  			float intervals = actual_interval / trigger_interval;
@@@ -1308,13 -1279,12 +1315,20 @@@ void ServerEnvironment::step(float dtim
  		{
  			m_send_recommended_timer -= getSendRecommendedInterval();
  			if (m_send_recommended_timer > getSendRecommendedInterval() * 2) {
++<<<<<<< HEAD
++=======
+ 				//errorstream<<" send rec overload t="<<m_send_recommended_timer<<" i="<< getSendRecommendedInterval()<<" os="<<m_active_objects.size()<<std::endl;
++>>>>>>> proller/liquid_default
  				m_send_recommended_timer = 0;
  			}
  			send_recommended = true;
  		}
  		bool only_peaceful_mobs = g_settings->getBool("only_peaceful_mobs");
++<<<<<<< HEAD
 +		u32 n = 0, calls = 0, 
 +			end_ms = porting::getTimeMs() + 1000 * g_settings->getFloat("dedicated_server_step");
++=======
++>>>>>>> proller/liquid_default
  		for(std::map<u16, ServerActiveObject*>::iterator
  				i = m_active_objects.begin();
  				i != m_active_objects.end(); ++i)
diff --cc src/server.cpp
index a1be357,16adbdf..0000000
--- a/src/server.cpp
+++ b/src/server.cpp
@@@ -114,9 -112,8 +114,14 @@@ void * ServerThread::Thread(
  
  			// Loop used only when 100% cpu load or on old slow hardware. 
  			// usually only one packet recieved here
++<<<<<<< HEAD
 +			u32 end_ms = porting::getTimeMs() + 1000 * dedicated_server_step;
 +			for (u16 i = 0; i < 1000; ++i)
 +				if (!m_server->Receive() || porting::getTimeMs() > end_ms)
++=======
+ 			for (u16 i = 0; i < 100; ++i)
+ 				if (!m_server->Receive())
++>>>>>>> proller/liquid_default
  					break;
  		}
  		catch(con::NoIncomingDataException &e)




!!!!!!!!!!!!!!!!!
 Merge sapier/avoid_facedir_if_not_moving to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      src/content_cao.cpp
#	both modified:      src/content_sao.cpp
#
no changes added to commit (use "git add" and/or "git commit -a")
diff --cc src/content_cao.cpp
index e97e3a1,fb4bc95..0000000
--- a/src/content_cao.cpp
+++ b/src/content_cao.cpp
@@@ -1211,9 -1211,9 +1211,15 @@@ public
  			updateNodePos();
  		}
  
++<<<<<<< HEAD
 +		if (getParent() == NULL && m_prop.automatic_face_movement_dir &&
 +				(fabs(m_velocity.Z) > 0.001 || fabs(m_velocity.X) > 0.001)){
 +			m_yaw = atan2(m_velocity.Z,m_velocity.X) * 180 / M_PI + m_prop.automatic_face_movement_dir_offset;
++=======
+ 		if ((getParent() == NULL && m_prop.automatic_face_movement_dir) &&
+ 			((m_velocity.Z != 0) || (m_velocity.X != 0))){
+ 			m_yaw = atan2(m_velocity.Z,m_velocity.X) * 180 / M_PI;
++>>>>>>> sapier/avoid_facedir_if_not_moving
  			updateNodePos();
  		}
  	}
diff --cc src/content_sao.cpp
index 85ab8d3,92cabfb..0000000
--- a/src/content_sao.cpp
+++ b/src/content_sao.cpp
@@@ -527,9 -527,9 +527,14 @@@ void LuaEntitySAO::step(float dtime, bo
  			m_velocity += dtime * m_acceleration;
  		}
  
 -		if( (m_prop.automatic_face_movement_dir) &&
 +		if((m_prop.automatic_face_movement_dir) &&
++<<<<<<< HEAD
 +				(fabs(m_velocity.Z) > 0.001 || fabs(m_velocity.X) > 0.001)){
 +			m_yaw = atan2(m_velocity.Z,m_velocity.X) * 180 / M_PI + m_prop.automatic_face_movement_dir_offset;
++=======
+ 			((m_velocity.Z != 0) || (m_velocity.X != 0))){
+ 			m_yaw = atan2(m_velocity.Z,m_velocity.X) * 180 / M_PI;
++>>>>>>> sapier/avoid_facedir_if_not_moving
  		}
  	}
  




!!!!!!!!!!!!!!!!!
 Merge Novatux/forceload to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Changes to be committed:
#
#	modified:   doc/lua_api.txt
#	modified:   minetest.conf.example
#	modified:   src/defaultsettings.cpp
#	modified:   src/environment.cpp
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      src/object_properties.cpp
#	both modified:      src/object_properties.h
#
diff --cc src/object_properties.cpp
index f560f59,162cc67..0000000
--- a/src/object_properties.cpp
+++ b/src/object_properties.cpp
@@@ -42,7 -42,7 +42,11 @@@ ObjectProperties::ObjectProperties()
  	automatic_rotate(0),
  	stepheight(0),
  	automatic_face_movement_dir(false),
++<<<<<<< HEAD
 +	automatic_face_movement_dir_offset(0.0)
++=======
+ 	force_load(false)
++>>>>>>> Novatux/forceload
  {
  	textures.push_back("unknown_object.png");
  	colors.push_back(video::SColor(255,255,255,255));
@@@ -105,7 -106,7 +110,11 @@@ void ObjectProperties::serialize(std::o
  	writeU8(os, collideWithObjects);
  	writeF1000(os,stepheight);
  	writeU8(os, automatic_face_movement_dir);
++<<<<<<< HEAD
 +	writeF1000(os, automatic_face_movement_dir_offset);
++=======
+ 	writeU8(os, force_load);
++>>>>>>> Novatux/forceload
  	// Add stuff only at the bottom.
  	// Never remove anything, because we don't want new versions of this
  }
@@@ -141,7 -142,7 +150,11 @@@ void ObjectProperties::deSerialize(std:
  			collideWithObjects = readU8(is);
  			stepheight = readF1000(is);
  			automatic_face_movement_dir = readU8(is);
++<<<<<<< HEAD
 +			automatic_face_movement_dir_offset = readF1000(is);
++=======
+ 			force_load = readU8(is);
++>>>>>>> Novatux/forceload
  		}catch(SerializationError &e){}
  	}
  	else
diff --cc src/object_properties.h
index 4b7f9a5,dbcbba5..0000000
--- a/src/object_properties.h
+++ b/src/object_properties.h
@@@ -46,7 -46,7 +46,11 @@@ struct ObjectPropertie
  	float automatic_rotate;
  	f32 stepheight;
  	bool automatic_face_movement_dir;
++<<<<<<< HEAD
 +	f32 automatic_face_movement_dir_offset;
++=======
+ 	bool force_load;
++>>>>>>> Novatux/forceload
  
  
  	ObjectProperties();




!!!!!!!!!!!!!!!!!
 Merge sapier/fix_crash_on_lua_exception to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      src/guiFormSpecMenu.cpp
#
no changes added to commit (use "git add" and/or "git commit -a")
diff --cc src/guiFormSpecMenu.cpp
index aa1e2d9,01630e0..0000000
--- a/src/guiFormSpecMenu.cpp
+++ b/src/guiFormSpecMenu.cpp
@@@ -1661,6 -1599,20 +1661,23 @@@ void GUIFormSpecMenu::regenerateGui(v2u
  		}
  		changeCtype("C");
  	}
++<<<<<<< HEAD
++=======
+ 	// Add tooltip
+ 	{
+ 		// Note: parent != this so that the tooltip isn't clipped by the menu rectangle
+ 		m_tooltip_element = Environment->addStaticText(L"",core::rect<s32>(0,0,110,18));
+ 		m_tooltip_element->enableOverrideColor(true);
+ 		m_tooltip_element->setBackgroundColor(video::SColor(255,110,130,60));
+ 		m_tooltip_element->setDrawBackground(true);
+ 		m_tooltip_element->setDrawBorder(true);
+ 		m_tooltip_element->setOverrideColor(video::SColor(255,255,255,255));
+ 		m_tooltip_element->setTextAlignment(gui::EGUIA_CENTER, gui::EGUIA_CENTER);
+ 		m_tooltip_element->setWordWrap(false);
+ 		//we're not parent so no autograb for this one!
+ 		m_tooltip_element->grab();
+ 	}
++>>>>>>> sapier/fix_crash_on_lua_exception
  
  	//set initial focus if parser didn't set it
  	focused_element = Environment->getFocus();




!!!!!!!!!!!!!!!!!
 Merge ShadowNinja/protection_support to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      builtin/misc_register.lua
#	both modified:      doc/lua_api.txt
#
no changes added to commit (use "git add" and/or "git commit -a")
diff --cc builtin/misc_register.lua
index 2a7feaa,3002d5e..0000000
--- a/builtin/misc_register.lua
+++ b/builtin/misc_register.lua
@@@ -342,7 -327,5 +342,10 @@@ minetest.registered_on_joinplayers, min
  minetest.registered_on_leaveplayers, minetest.register_on_leaveplayer = make_registration()
  minetest.registered_on_player_receive_fields, minetest.register_on_player_receive_fields = make_registration_reverse()
  minetest.registered_on_cheats, minetest.register_on_cheat = make_registration()
++<<<<<<< HEAD
 +minetest.registered_on_crafts, minetest.register_on_craft = make_registration()
 +minetest.registered_craft_predicts, minetest.register_craft_predict = make_registration()
++=======
++>>>>>>> ShadowNinja/protection_support
  minetest.registered_on_protection_violation, minetest.register_on_protection_violation = make_registration()
  
diff --cc doc/lua_api.txt
index 4b69c41,7b53c19..0000000
--- a/doc/lua_api.txt
+++ b/doc/lua_api.txt
@@@ -1203,15 -1151,6 +1203,18 @@@ minetest.register_on_player_receive_fie
  minetest.register_on_mapgen_init(func(MapgenParams))
  ^ Called just before the map generator is initialized but before the environment is initialized
  ^ MapgenParams consists of a table with the fields mgname, seed, water_level, and flags
++<<<<<<< HEAD
 +minetest.register_on_craft(func(itemstack, player, old_craft_grid, craft_inv))
 +^ Called when player crafts something
 +^ itemstack is the output
 +^ old_craft_grid contains the recipe (Note: the one in the inventory is cleared)
 +^ craft_inv is the inventory with the crafting grid
 +^ Return either an ItemStack, to replace the output, or nil, to not modify it
 +minetest.register_craft_predict(func(itemstack, player, old_craft_grid, craft_inv))
 +^ The same as before, except that it is called before the player crafts, to make
 +^ craft prediction, and it should not change anything.
++=======
++>>>>>>> ShadowNinja/protection_support
  minetest.register_on_protection_violation(func(pos, name))
  ^ Called by builtin and mods when a player violates protection at a position
    (eg, digs a node or punches a protected entity).
@@@ -1564,23 -1498,6 +1567,26 @@@ minetest.is_protected(pos, name) -> boo
  minetest.record_protection_violation(pos, name)
  ^ This function calls functions registered with
    minetest.register_on_protection_violation.
++<<<<<<< HEAD
 +minetest.rotate_and_place(itemstack, placer, pointed_thing, infinitestacks, orient_flags)
 +^ Attempt to predict the desired orientation of the facedir-capable node
 +  defined by itemstack, and place it accordingly (on-wall, on the floor, or
 +  hanging from the ceiling). Stacks are handled normally if the infinitestacks
 +  field is false or omitted (else, the itemstack is not changed). orient_flags
 +  is an optional table containing extra tweaks to the placement code:
 +  invert_wall:		if true, place wall-orientation on the ground and ground-
 +					orientation on the wall.
 +  force_wall:		if true, always place the node in wall orientation.
 +  force_ceiling:	if true, always place on the ceiling.
 +  force_floor:		if true, always place the node on the floor.
 +
 +  The above four options are mutually-exclusive; the last in the list takes
 +  precedence over the first.
 +
 +  force_facedir:	if true, forcably reset the facedir to north when placing on
 +					the floor or ceiling
++=======
++>>>>>>> ShadowNinja/protection_support
  
  Global objects:
  minetest.env - EnvRef of the server environment and world.




!!!!!!!!!!!!!!!!!
 Merge Jeija/rotateto to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Changes to be committed:
#
#	modified:   doc/lua_api.txt
#	modified:   src/content_sao.h
#	modified:   src/genericobject.cpp
#	modified:   src/genericobject.h
#	modified:   src/script/lua_api/l_object.cpp
#	modified:   src/script/lua_api/l_object.h
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      src/content_cao.cpp
#	both modified:      src/content_sao.cpp
#
diff --cc src/content_cao.cpp
index eda0d54,89b8dc5..0000000
--- a/src/content_cao.cpp
+++ b/src/content_cao.cpp
@@@ -1213,35 -1215,28 +1222,60 @@@ public
  			m_yaw += dtime * m_prop.automatic_rotate * 180 / M_PI;
  			updateNodePos();
  		}
++<<<<<<< HEAD
 +
 +		if (getParent() == NULL && m_prop.automatic_face_movement_dir &&
 +				(fabs(m_velocity.Z) > 0.001 || fabs(m_velocity.X) > 0.001)){
 +			m_yaw = atan2(m_velocity.Z,m_velocity.X) * 180 / M_PI + m_prop.automatic_face_movement_dir_offset;
 +			updateNodePos();
 +		}
 +		updateAnimationSpeed();
 +	}
 +
 +	void updateAnimationSpeed()
 +	{
 +		if(m_animated_meshnode == NULL)
 +			return;
 +
 +		if (m_anim_base_velocity > 0)
 +		{
 +			//calculate current velocity
 +			float current_velocity = XZScalar(m_velocity.X,m_velocity.Z);
 +
 +			if (fabs(m_anim_last_updated_velocity-current_velocity) > 0.05)
 +			{
 +				//calculate new animation speed
 +				float new_speed = current_velocity/m_anim_base_velocity * 15;
 +
 +				m_animated_meshnode->setAnimationSpeed(new_speed);
 +
 +				m_anim_last_updated_velocity = current_velocity;
 +			}
 +		}
++=======
+ 		// Automatic rotation overrides continues rotation
+ 		if(getParent() == NULL && m_rotate_yaw_speed != 0 && fabs(m_prop.automatic_rotate) < 0.001){
+ 			float target_yaw = m_yaw + dtime * m_rotate_yaw_speed;
+ 			if ((m_rotate_yaw_speed > 0 && m_yaw < m_dest_yaw
+ 				&& target_yaw > m_dest_yaw) || (m_rotate_yaw_speed < 0 
+ 				&& m_yaw > m_dest_yaw && target_yaw < m_dest_yaw)
+ 				|| (m_rotate_yaw_speed > 0 && m_yaw < m_dest_yaw + 360
+ 				&& target_yaw > m_dest_yaw + 360))
+ 			{
+ 				// destination yaw is reached
+ 				m_yaw = m_dest_yaw;
+ 				m_rotate_yaw_speed = 0;
+ 			}
+ 			else
+ 			{
+ 				m_yaw = target_yaw;
+ 			}
+ 			updateNodePos();
+ 		}
+ 
+ 		if (m_yaw > 360) m_yaw -= 360;
+ 		if (m_yaw < 0  ) m_yaw += 360;
++>>>>>>> Jeija/rotateto
  	}
  
  	void updateTexturePos()
diff --cc src/content_sao.cpp
index d38894b,4bd6a23..0000000
--- a/src/content_sao.cpp
+++ b/src/content_sao.cpp
@@@ -528,14 -515,33 +530,39 @@@ void LuaEntitySAO::step(float dtime, bo
  			m_velocity += dtime * m_acceleration;
  		}
  
++<<<<<<< HEAD
 +		if((m_prop.automatic_face_movement_dir) &&
 +				(fabs(m_velocity.Z) > 0.001 || fabs(m_velocity.X) > 0.001)){
 +			m_yaw = atan2(m_velocity.Z,m_velocity.X) * 180 / M_PI + m_prop.automatic_face_movement_dir_offset;
 +		}
++=======
+ 		// Automatic rotation overrides continues rotation
+ 		// Perform this also on the server to make getyaw() work
+ 		if(fabs(m_prop.automatic_rotate) < 0.001){
+ 			float target_yaw = m_yaw + dtime * m_rotate_yaw_speed;
+ 			if ((m_rotate_yaw_speed > 0 && m_yaw < m_dest_yaw
+ 				&& target_yaw > m_dest_yaw) || (m_rotate_yaw_speed < 0 
+ 				&& m_yaw > m_dest_yaw && target_yaw < m_dest_yaw)
+ 				|| (m_rotate_yaw_speed > 0 && m_yaw < m_dest_yaw + 360
+ 				&& target_yaw > m_dest_yaw + 360))
+ 			{
+ 				// destination yaw is reached
+ 				m_yaw = m_dest_yaw;
+ 				m_rotate_yaw_speed = 0;
 -			}
++>>>>>>> Jeija/rotateto
++	}
+ 			else
+ 			{
+ 				m_yaw = target_yaw;
+ 			}
+ 		}
  	}
  
+ 	if (m_yaw > 360) m_yaw -= 360;
+ 	if (m_yaw < 0  ) m_yaw += 360;
+ 
  	if(m_registered){
 -		lua_State *L = m_env->getLua();
 -		scriptapi_luaentity_step(L, m_id, dtime);
 +		m_env->getScriptIface()->luaentity_Step(m_id, dtime);
  	}
  
  	if(send_recommended == false)




!!!!!!!!!!!!!!!!!
 Merge Sokomine/master to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      doc/lua_api.txt
#
no changes added to commit (use "git add" and/or "git commit -a")
diff --cc doc/lua_api.txt
index c2ca473,5c52606..0000000
--- a/doc/lua_api.txt
+++ b/doc/lua_api.txt
@@@ -2116,11 -1998,9 +2116,17 @@@ Node definition (register_node
      <all fields allowed in item definitions>,
  
      drawtype = "normal", -- See "Node drawtypes"
++<<<<<<< HEAD
 +    visual_scale = 1.0,
 +    ^ Supported for drawtypes "plantlike", "signlike", "torchlike".
 +    ^ For plantlike, the image will start at the bottom of the node; for the
 +    ^ other drawtypes, the image will be centered on the node.
 +    ^ Note that positioning for "torchlike" may still change.
++=======
+     visual_scale = 1.0, -- supported for drawtypes "plantlike", "signlike", "torchlike"
+                         -- for plantlike, the image will start at the bottom of the node; for the other drawtypes, the image
+                         -- will be centered on the node
++>>>>>>> Sokomine/master
      tiles = {tile definition 1, def2, def3, def4, def5, def6},
      ^ Textures of node; +Y, -Y, +X, -X, +Z, -Z (old field name: tile_images)
      ^ List can be shortened to needed length




!!!!!!!!!!!!!!!!!
 Merge RealBadAngel/master to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Changes to be committed:
#
#	modified:   src/sky.cpp
#	new file:   textures/base/pack/moon.png
#	new file:   textures/base/pack/moon_tonemap.png
#	new file:   textures/base/pack/sun.png
#	new file:   textures/base/pack/sun_tonemap.png
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      src/sky.h
#
diff --cc src/sky.h
index 35c86db,6b5ae8b..0000000
--- a/src/sky.h
+++ b/src/sky.h
@@@ -114,7 -78,8 +114,12 @@@ private
  	v3f m_stars[SKY_STAR_COUNT];
  	u16 m_star_indices[SKY_STAR_COUNT*4];
  	video::S3DVertex m_star_vertices[SKY_STAR_COUNT*4];
++<<<<<<< HEAD
 +	LocalPlayer* m_player;
++=======
+ 	video::ITexture* m_sun_tonemap;
+ 	video::ITexture* m_moon_tonemap;
++>>>>>>> RealBadAngel/master
  };
  
  #endif
