



!!!!!!!!!!!!!!!!!
 Merge sapier/avoid_facedir_if_not_moving to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      src/content_cao.cpp
#	both modified:      src/content_sao.cpp
#
no changes added to commit (use "git add" and/or "git commit -a")
diff --cc src/content_cao.cpp
index e97e3a1,fb4bc95..0000000
--- a/src/content_cao.cpp
+++ b/src/content_cao.cpp
@@@ -1211,9 -1211,9 +1211,15 @@@ public
  			updateNodePos();
  		}
  
++<<<<<<< HEAD
 +		if (getParent() == NULL && m_prop.automatic_face_movement_dir &&
 +				(fabs(m_velocity.Z) > 0.001 || fabs(m_velocity.X) > 0.001)){
 +			m_yaw = atan2(m_velocity.Z,m_velocity.X) * 180 / M_PI + m_prop.automatic_face_movement_dir_offset;
++=======
+ 		if ((getParent() == NULL && m_prop.automatic_face_movement_dir) &&
+ 			((m_velocity.Z != 0) || (m_velocity.X != 0))){
+ 			m_yaw = atan2(m_velocity.Z,m_velocity.X) * 180 / M_PI;
++>>>>>>> sapier/avoid_facedir_if_not_moving
  			updateNodePos();
  		}
  	}
diff --cc src/content_sao.cpp
index 85ab8d3,92cabfb..0000000
--- a/src/content_sao.cpp
+++ b/src/content_sao.cpp
@@@ -527,9 -527,9 +527,14 @@@ void LuaEntitySAO::step(float dtime, bo
  			m_velocity += dtime * m_acceleration;
  		}
  
 -		if( (m_prop.automatic_face_movement_dir) &&
 +		if((m_prop.automatic_face_movement_dir) &&
++<<<<<<< HEAD
 +				(fabs(m_velocity.Z) > 0.001 || fabs(m_velocity.X) > 0.001)){
 +			m_yaw = atan2(m_velocity.Z,m_velocity.X) * 180 / M_PI + m_prop.automatic_face_movement_dir_offset;
++=======
+ 			((m_velocity.Z != 0) || (m_velocity.X != 0))){
+ 			m_yaw = atan2(m_velocity.Z,m_velocity.X) * 180 / M_PI;
++>>>>>>> sapier/avoid_facedir_if_not_moving
  		}
  	}
  




!!!!!!!!!!!!!!!!!
 Merge Novatux/forceload to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Changes to be committed:
#
#	modified:   doc/lua_api.txt
#	modified:   minetest.conf.example
#	modified:   src/defaultsettings.cpp
#	modified:   src/environment.cpp
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      src/object_properties.cpp
#	both modified:      src/object_properties.h
#
diff --cc src/object_properties.cpp
index f560f59,162cc67..0000000
--- a/src/object_properties.cpp
+++ b/src/object_properties.cpp
@@@ -42,7 -42,7 +42,11 @@@ ObjectProperties::ObjectProperties()
  	automatic_rotate(0),
  	stepheight(0),
  	automatic_face_movement_dir(false),
++<<<<<<< HEAD
 +	automatic_face_movement_dir_offset(0.0)
++=======
+ 	force_load(false)
++>>>>>>> Novatux/forceload
  {
  	textures.push_back("unknown_object.png");
  	colors.push_back(video::SColor(255,255,255,255));
@@@ -105,7 -106,7 +110,11 @@@ void ObjectProperties::serialize(std::o
  	writeU8(os, collideWithObjects);
  	writeF1000(os,stepheight);
  	writeU8(os, automatic_face_movement_dir);
++<<<<<<< HEAD
 +	writeF1000(os, automatic_face_movement_dir_offset);
++=======
+ 	writeU8(os, force_load);
++>>>>>>> Novatux/forceload
  	// Add stuff only at the bottom.
  	// Never remove anything, because we don't want new versions of this
  }
@@@ -141,7 -142,7 +150,11 @@@ void ObjectProperties::deSerialize(std:
  			collideWithObjects = readU8(is);
  			stepheight = readF1000(is);
  			automatic_face_movement_dir = readU8(is);
++<<<<<<< HEAD
 +			automatic_face_movement_dir_offset = readF1000(is);
++=======
+ 			force_load = readU8(is);
++>>>>>>> Novatux/forceload
  		}catch(SerializationError &e){}
  	}
  	else
diff --cc src/object_properties.h
index 4b7f9a5,dbcbba5..0000000
--- a/src/object_properties.h
+++ b/src/object_properties.h
@@@ -46,7 -46,7 +46,11 @@@ struct ObjectPropertie
  	float automatic_rotate;
  	f32 stepheight;
  	bool automatic_face_movement_dir;
++<<<<<<< HEAD
 +	f32 automatic_face_movement_dir_offset;
++=======
+ 	bool force_load;
++>>>>>>> Novatux/forceload
  
  
  	ObjectProperties();




!!!!!!!!!!!!!!!!!
 Merge sapier/fix_multiplayer_server_not_saved to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Changes to be committed:
#
#	modified:   minetest.conf.example
#	modified:   src/defaultsettings.cpp
#	modified:   src/main.cpp
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      builtin/mainmenu.lua
#
diff --cc builtin/mainmenu.lua
index 5a1b6e9,683ef6f..0000000
--- a/builtin/mainmenu.lua
+++ b/builtin/mainmenu.lua
@@@ -439,38 -401,43 +439,43 @@@ function tabbuilder.handle_multiplayer_
  	if fields["favourites"] ~= nil then
  		local event = explode_textlist_event(fields["favourites"])
  		if event.typ == "DCL" then
+ 			if event.index <= #menu.favorites then
 -				gamedata.address = menu.favorites[event.index].address
 -				gamedata.port = menu.favorites[event.index].port
 -				gamedata.playername		= fields["te_name"]
 -				if fields["te_pwd"] ~= nil then
 -					gamedata.password		= fields["te_pwd"]
 -				end
 -				gamedata.selected_world = 0
 -				
 -				if menu.favorites ~= nil then
 -					gamedata.servername = menu.favorites[event.index].name
 -					gamedata.serverdescription = menu.favorites[event.index].description
 -				end
 -				
 -				if gamedata.address ~= nil and
 -					gamedata.port ~= nil then
 +			gamedata.address = menu.favorites[event.index].address
 +			gamedata.port = menu.favorites[event.index].port
 +			gamedata.playername		= fields["te_name"]
 +			if fields["te_pwd"] ~= nil then
 +				gamedata.password		= fields["te_pwd"]
 +			end
 +			gamedata.selected_world = 0
 +			
 +			if menu.favorites ~= nil then
 +				gamedata.servername = menu.favorites[event.index].name
 +				gamedata.serverdescription = menu.favorites[event.index].description
 +			end
 +			
 +			if gamedata.address ~= nil and
 +				gamedata.port ~= nil then
- 				
+ 					engine.setting_set("address",gamedata.address)
+ 					engine.setting_set("remote_port",gamedata.port)
 -					engine.start()
 -				end
 +				engine.start()
  			end
  		end
++		end
  		
  		if event.typ == "CHG" then
+ 			if event.index <= #menu.favorites then
 -				local address = menu.favorites[event.index].address
 -				local port = menu.favorites[event.index].port
 -				
 -				if address ~= nil and
 -					port ~= nil then
 -					engine.setting_set("address",address)
 +			local address = menu.favorites[event.index].address
 +			local port = menu.favorites[event.index].port
 +			
 +			if address ~= nil and
 +				port ~= nil then
 +				engine.setting_set("address",address)
- 				engine.setting_set("port",port)
+ 					engine.setting_set("remote_port",port)
 -				end
 -				
 -				menu.fav_selected = event.index
  			end
 +			
 +			menu.fav_selected = event.index
 +		end
+ 		end
  		return
  	end
  	
@@@ -872,13 -831,13 +881,18 @@@ en
  function tabbuilder.tab_multiplayer()
  
  	local retval =
 -		"vertlabel[0,-0.25;CLIENT]" ..
 -		"label[1,-0.25;Favorites:]"..
 -		"label[1,4.25;Address/Port]"..
 -		"label[9,2.75;Name/Password]" ..
 +		"vertlabel[0,-0.25;".. fgettext("CLIENT") .. "]" ..
 +		"label[1,-0.25;".. fgettext("Favorites:") .. "]"..
 +		"label[1,4.25;".. fgettext("Address/Port") .. "]"..
 +		"label[9,2.75;".. fgettext("Name/Password") .. "]" ..
  		"field[1.25,5.25;5.5,0.5;te_address;;" ..engine.setting_get("address") .."]" ..
++<<<<<<< HEAD
 +		"field[6.75,5.25;2.25,0.5;te_port;;" ..engine.setting_get("port") .."]" ..
 +		"checkbox[1,3.6;cb_public_serverlist;".. fgettext("Public Serverlist") .. ";" ..
++=======
+ 		"field[6.75,5.25;2.25,0.5;te_port;;" ..engine.setting_get("remote_port") .."]" ..
+ 		"checkbox[1,3.6;cb_public_serverlist;Public Serverlist;" ..
++>>>>>>> sapier/fix_multiplayer_server_not_saved
  		dump(engine.setting_getbool("public_serverlist")) .. "]"
  		
  	if not engine.setting_getbool("public_serverlist") then
@@@ -928,22 -887,22 +942,27 @@@ function tabbuilder.tab_server(
  				)
  	
  	local retval = 
 -		"button[4,4.15;2.6,0.5;world_delete;Delete]" ..
 -		"button[6.5,4.15;2.8,0.5;world_create;New]" ..
 -		"button[9.2,4.15;2.55,0.5;world_configure;Configure]" ..
 -		"button[8.5,4.9;3.25,0.5;start_server;Start Game]" ..
 -		"label[4,-0.25;Select World:]"..
 -		"vertlabel[0,-0.25;START SERVER]" ..
 -		"checkbox[0.5,0.25;cb_creative_mode;Creative Mode;" ..
 +		"button[4,4.15;2.6,0.5;world_delete;".. fgettext("Delete") .. "]" ..
 +		"button[6.5,4.15;2.8,0.5;world_create;".. fgettext("New") .. "]" ..
 +		"button[9.2,4.15;2.55,0.5;world_configure;".. fgettext("Configure") .. "]" ..
 +		"button[8.5,4.9;3.25,0.5;start_server;".. fgettext("Start Game") .. "]" ..
 +		"label[4,-0.25;".. fgettext("Select World:") .. "]"..
 +		"vertlabel[0,-0.25;".. fgettext("START SERVER") .. "]" ..
 +		"checkbox[0.5,0.25;cb_creative_mode;".. fgettext("Creative Mode") .. ";" ..
  		dump(engine.setting_getbool("creative_mode")) .. "]"..
 -		"checkbox[0.5,0.7;cb_enable_damage;Enable Damage;" ..
 +		"checkbox[0.5,0.7;cb_enable_damage;".. fgettext("Enable Damage") .. ";" ..
  		dump(engine.setting_getbool("enable_damage")) .. "]"..
 -		"checkbox[0.5,1.15;cb_server_announce;Public;" ..
 +		"checkbox[0.5,1.15;cb_server_announce;".. fgettext("Public") .. ";" ..
  		dump(engine.setting_getbool("server_announce")) .. "]"..
 -		"field[0.8,3.2;3,0.5;te_playername;Name;" ..
 +		"field[0.8,3.2;3,0.5;te_playername;".. fgettext("Name") .. ";" ..
  		engine.setting_get("name") .. "]" ..
++<<<<<<< HEAD
 +		"pwdfield[0.8,4.2;3,0.5;te_passwd;".. fgettext("Password") .. "]" ..
 +		"field[0.8,5.2;3,0.5;te_serverport;".. fgettext("Server Port") .. ";30000]" ..
++=======
+ 		"pwdfield[0.8,4.2;3,0.5;te_passwd;Password]" ..
+ 		"field[0.8,5.2;3,0.5;te_serverport;Server Port;" .. engine.setting_get("port") .."]" ..
++>>>>>>> sapier/fix_multiplayer_server_not_saved
  		"textlist[4,0.25;7.5,3.7;srv_worlds;" ..
  		menu.render_world_list() ..
  		";" .. index .. "]"




!!!!!!!!!!!!!!!!!
 Merge sapier/autoupdate_anim_speed to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Changes to be committed:
#
#	modified:   doc/lua_api.txt
#	modified:   src/content_cao.cpp
#	modified:   src/content_sao.cpp
#	modified:   src/content_sao.h
#	modified:   src/genericobject.cpp
#	modified:   src/genericobject.h
#	modified:   src/script/lua_api/l_object.cpp
#	modified:   src/serverobject.h
#	modified:   src/util/numeric.h
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      src/clientserver.h
#
diff --cc src/clientserver.h
index 6a7cbda,cc5b072..0000000
--- a/src/clientserver.h
+++ b/src/clientserver.h
@@@ -95,11 -99,12 +95,17 @@@ with this program; if not, write to th
  		TOCLIENT_BREATH
  		TOSERVER_BREATH
  		range added to ItemDefinition
 -		drowning, leveled and liquid_range added to ContentFeatures
 +		drowning, leveled added to ContentFeatures
  		stepheight and collideWithObjects added to object properties
  		version, heat and humidity transfer in MapBock
++<<<<<<< HEAD
 +		automatic_face_movement_dir and automatic_face_movement_dir_offset
 +			added to object properties
++=======
+ 		added new property to entities automatic_face_movement_dir
+ 		Add parameter to GENERIC_CMD_SET_ANIMATION
+ 		Add support for anim framerate prediction based uppon base_velocity
++>>>>>>> sapier/autoupdate_anim_speed
  */
  
  #define LATEST_PROTOCOL_VERSION 21




!!!!!!!!!!!!!!!!!
 Merge sapier/add_surface_detection_function to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Changes to be committed:
#
#	modified:   doc/lua_api.txt
#	modified:   src/map.cpp
#	modified:   src/map.h
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      src/environment.h
#	both modified:      src/script/lua_api/l_env.cpp
#	both modified:      src/script/lua_api/l_env.h
#
diff --cc src/environment.h
index 67e8872,843a3d9..0000000
--- a/src/environment.h
+++ b/src/environment.h
@@@ -304,10 -307,7 +304,13 @@@ public
  
  	void reportMaxLagEstimate(float f) { m_max_lag_estimate = f; }
  	float getMaxLagEstimate() { return m_max_lag_estimate; }
 -
 +	
++<<<<<<< HEAD
 +	// is weather active in this environment?
 +	bool m_use_weather;
 +	
++=======
++>>>>>>> sapier/add_surface_detection_function
  private:
  
  	/*
diff --cc src/script/lua_api/l_env.cpp
index 375173b,47e9963..0000000
--- a/src/script/lua_api/l_env.cpp
+++ b/src/script/lua_api/l_env.cpp
@@@ -781,40 -937,49 +805,84 @@@ int ModApiEnvMod::l_get_humidity(lua_St
  }
  
  
 -bool ModApiEnvMod::Initialize(lua_State *L,int top)
 -{
 +void ModApiEnvMod::Initialize(lua_State *L, int top)
 +{
++<<<<<<< HEAD
 +	API_FCT(set_node);
 +	API_FCT(add_node);
 +	API_FCT(add_item);
 +	API_FCT(remove_node);
 +	API_FCT(get_node);
 +	API_FCT(get_node_or_nil);
 +	API_FCT(get_node_light);
 +	API_FCT(place_node);
 +	API_FCT(dig_node);
 +	API_FCT(punch_node);
 +	API_FCT(get_node_max_level);
 +	API_FCT(get_node_level);
 +	API_FCT(set_node_level);
 +	API_FCT(add_node_level);
 +	API_FCT(add_entity);
 +	API_FCT(get_meta);
 +	API_FCT(get_node_timer);
 +	API_FCT(get_player_by_name);
 +	API_FCT(get_objects_inside_radius);
 +	API_FCT(set_timeofday);
 +	API_FCT(get_timeofday);
 +	API_FCT(get_gametime);
 +	API_FCT(find_node_near);
 +	API_FCT(find_nodes_in_area);
 +	API_FCT(get_perlin);
 +	API_FCT(get_perlin_map);
 +	API_FCT(get_voxel_manip);
 +	API_FCT(clear_objects);
 +	API_FCT(spawn_tree);
 +	API_FCT(find_path);
 +	API_FCT(line_of_sight);
 +	API_FCT(transforming_liquid_add);
 +	API_FCT(get_heat);
 +	API_FCT(get_humidity);
++=======
+ 
+ 	bool retval = true;
+ 
+ 	retval &= API_FCT(set_node);
+ 	retval &= API_FCT(add_node);
+ 	retval &= API_FCT(add_item);
+ 	retval &= API_FCT(remove_node);
+ 	retval &= API_FCT(get_node);
+ 	retval &= API_FCT(get_node_or_nil);
+ 	retval &= API_FCT(get_node_light);
+ 	retval &= API_FCT(place_node);
+ 	retval &= API_FCT(dig_node);
+ 	retval &= API_FCT(punch_node);
+ 	retval &= API_FCT(get_node_max_level);
+ 	retval &= API_FCT(get_node_level);
+ 	retval &= API_FCT(set_node_level);
+ 	retval &= API_FCT(add_node_level);
+ 	retval &= API_FCT(add_entity);
+ 	retval &= API_FCT(get_meta);
+ 	retval &= API_FCT(get_node_timer);
+ 	retval &= API_FCT(get_player_by_name);
+ 	retval &= API_FCT(get_objects_inside_radius);
+ 	retval &= API_FCT(set_timeofday);
+ 	retval &= API_FCT(get_timeofday);
+ 	retval &= API_FCT(find_node_near);
+ 	retval &= API_FCT(find_nodes_in_area);
+ 	retval &= API_FCT(get_perlin);
+ 	retval &= API_FCT(get_perlin_map);
+ 	retval &= API_FCT(get_voxel_manip);
+ 	retval &= API_FCT(get_mapgen_object);
+ 	retval &= API_FCT(set_mapgen_params);
+ 	retval &= API_FCT(clear_objects);
+ 	retval &= API_FCT(get_surface);
+ 	retval &= API_FCT(spawn_tree);
+ 	retval &= API_FCT(find_path);
+ 	retval &= API_FCT(line_of_sight);
+ 	retval &= API_FCT(transforming_liquid_add);
+ 	retval &= API_FCT(get_heat);
+ 	retval &= API_FCT(get_humidity);
+ 
+ 	return retval;
++>>>>>>> sapier/add_surface_detection_function
  }
 -
 -ModApiEnvMod modapienv_prototype;
diff --cc src/script/lua_api/l_env.h
index 5f3467f,b01fe5a..0000000
--- a/src/script/lua_api/l_env.h
+++ b/src/script/lua_api/l_env.h
@@@ -147,8 -159,13 +147,16 @@@ private
  	static int l_get_heat(lua_State *L);
  	static int l_get_humidity(lua_State *L);
  	
++<<<<<<< HEAD
++=======
+ 	// minetest.get_surface(basepos,yoffset,walkable_only=false)
+ 	static int l_get_surface(lua_State *L);
+ 
+ 	static struct EnumString es_MapgenObject[];
+ 	
++>>>>>>> sapier/add_surface_detection_function
  public:
 -	bool Initialize(lua_State *L, int top);
 +	static void Initialize(lua_State *L, int top);
  };
  
  class LuaABM : public ActiveBlockModifier




!!!!!!!!!!!!!!!!!
 Merge Jeija/rotateto to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Changes to be committed:
#
#	modified:   doc/lua_api.txt
#	modified:   src/content_sao.h
#	modified:   src/genericobject.cpp
#	modified:   src/genericobject.h
#	modified:   src/script/lua_api/l_object.cpp
#	modified:   src/script/lua_api/l_object.h
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      src/content_cao.cpp
#	both modified:      src/content_sao.cpp
#
diff --cc src/content_cao.cpp
index e97e3a1,89b8dc5..0000000
--- a/src/content_cao.cpp
+++ b/src/content_cao.cpp
@@@ -1210,12 -1215,28 +1219,37 @@@ public
  			m_yaw += dtime * m_prop.automatic_rotate * 180 / M_PI;
  			updateNodePos();
  		}
++<<<<<<< HEAD
 +
 +		if (getParent() == NULL && m_prop.automatic_face_movement_dir &&
 +				(fabs(m_velocity.Z) > 0.001 || fabs(m_velocity.X) > 0.001)){
 +			m_yaw = atan2(m_velocity.Z,m_velocity.X) * 180 / M_PI + m_prop.automatic_face_movement_dir_offset;
 +			updateNodePos();
 +		}
++=======
+ 		// Automatic rotation overrides continues rotation
+ 		if(getParent() == NULL && m_rotate_yaw_speed != 0 && fabs(m_prop.automatic_rotate) < 0.001){
+ 			float target_yaw = m_yaw + dtime * m_rotate_yaw_speed;
+ 			if ((m_rotate_yaw_speed > 0 && m_yaw < m_dest_yaw
+ 				&& target_yaw > m_dest_yaw) || (m_rotate_yaw_speed < 0 
+ 				&& m_yaw > m_dest_yaw && target_yaw < m_dest_yaw)
+ 				|| (m_rotate_yaw_speed > 0 && m_yaw < m_dest_yaw + 360
+ 				&& target_yaw > m_dest_yaw + 360))
+ 			{
+ 				// destination yaw is reached
+ 				m_yaw = m_dest_yaw;
+ 				m_rotate_yaw_speed = 0;
+ 			}
+ 			else
+ 			{
+ 				m_yaw = target_yaw;
+ 			}
+ 			updateNodePos();
+ 		}
+ 
+ 		if (m_yaw > 360) m_yaw -= 360;
+ 		if (m_yaw < 0  ) m_yaw += 360;
++>>>>>>> Jeija/rotateto
  	}
  
  	void updateTexturePos()
diff --cc src/content_sao.cpp
index 85ab8d3,4bd6a23..0000000
--- a/src/content_sao.cpp
+++ b/src/content_sao.cpp
@@@ -527,14 -515,33 +529,39 @@@ void LuaEntitySAO::step(float dtime, bo
  			m_velocity += dtime * m_acceleration;
  		}
  
++<<<<<<< HEAD
 +		if((m_prop.automatic_face_movement_dir) &&
 +				(fabs(m_velocity.Z) > 0.001 || fabs(m_velocity.X) > 0.001)){
 +			m_yaw = atan2(m_velocity.Z,m_velocity.X) * 180 / M_PI + m_prop.automatic_face_movement_dir_offset;
 +		}
++=======
+ 		// Automatic rotation overrides continues rotation
+ 		// Perform this also on the server to make getyaw() work
+ 		if(fabs(m_prop.automatic_rotate) < 0.001){
+ 			float target_yaw = m_yaw + dtime * m_rotate_yaw_speed;
+ 			if ((m_rotate_yaw_speed > 0 && m_yaw < m_dest_yaw
+ 				&& target_yaw > m_dest_yaw) || (m_rotate_yaw_speed < 0 
+ 				&& m_yaw > m_dest_yaw && target_yaw < m_dest_yaw)
+ 				|| (m_rotate_yaw_speed > 0 && m_yaw < m_dest_yaw + 360
+ 				&& target_yaw > m_dest_yaw + 360))
+ 			{
+ 				// destination yaw is reached
+ 				m_yaw = m_dest_yaw;
+ 				m_rotate_yaw_speed = 0;
 -			}
++>>>>>>> Jeija/rotateto
++	}
+ 			else
+ 			{
+ 				m_yaw = target_yaw;
+ 			}
+ 		}
  	}
  
+ 	if (m_yaw > 360) m_yaw -= 360;
+ 	if (m_yaw < 0  ) m_yaw += 360;
+ 
  	if(m_registered){
 -		lua_State *L = m_env->getLua();
 -		scriptapi_luaentity_step(L, m_id, dtime);
 +		m_env->getScriptIface()->luaentity_Step(m_id, dtime);
  	}
  
  	if(send_recommended == false)




!!!!!!!!!!!!!!!!!
 Merge Sokomine/master to next failed:

# On branch next
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#	both modified:      doc/lua_api.txt
#
no changes added to commit (use "git add" and/or "git commit -a")
diff --cc doc/lua_api.txt
index 0428656,5c52606..0000000
--- a/doc/lua_api.txt
+++ b/doc/lua_api.txt
@@@ -2045,11 -1998,9 +2045,17 @@@ Node definition (register_node
      <all fields allowed in item definitions>,
  
      drawtype = "normal", -- See "Node drawtypes"
++<<<<<<< HEAD
 +    visual_scale = 1.0,
 +    ^ Supported for drawtypes "plantlike", "signlike", "torchlike".
 +    ^ For plantlike, the image will start at the bottom of the node; for the
 +    ^ other drawtypes, the image will be centered on the node.
 +    ^ Note that positioning for "torchlike" may still change.
++=======
+     visual_scale = 1.0, -- supported for drawtypes "plantlike", "signlike", "torchlike"
+                         -- for plantlike, the image will start at the bottom of the node; for the other drawtypes, the image
+                         -- will be centered on the node
++>>>>>>> Sokomine/master
      tiles = {tile definition 1, def2, def3, def4, def5, def6},
      ^ Textures of node; +Y, -Y, +X, -X, +Z, -Z (old field name: tile_images)
      ^ List can be shortened to needed length
