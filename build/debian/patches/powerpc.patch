Description: Fix the build on powerpc
Author: Matthew Bekkema <mat8913ftw@gmail.com>

---
 src/cguittfont/irrUString.h |   33 +++++++++++++++++----------------
 1 file changed, 17 insertions(+), 16 deletions(-)

Index: b/src/cguittfont/irrUString.h
===================================================================
--- a/src/cguittfont/irrUString.h
+++ b/src/cguittfont/irrUString.h
@@ -41,6 +41,7 @@
 #include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
+#include <endian.h>
 
 #ifdef USTRING_CPP0X
 #	include <utility>
@@ -806,7 +807,7 @@
 	ustring16()
 	: array(0), allocated(1), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -820,7 +821,7 @@
 	ustring16(const ustring16<TAlloc>& other)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -834,7 +835,7 @@
 	ustring16(const string<B, A>& other)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -849,7 +850,7 @@
 	ustring16(const std::basic_string<B, A, Alloc>& other)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -863,7 +864,7 @@
 	ustring16(Itr first, Itr last)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -882,7 +883,7 @@
 	ustring16(const char* const c)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -897,7 +898,7 @@
 	ustring16(const char* const c, u32 length)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -912,7 +913,7 @@
 	ustring16(const uchar8_t* const c)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -926,7 +927,7 @@
 	ustring16(const char c)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -940,7 +941,7 @@
 	ustring16(const uchar8_t* const c, u32 length)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -954,7 +955,7 @@
 	ustring16(const uchar16_t* const c)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -968,7 +969,7 @@
 	ustring16(const uchar16_t* const c, u32 length)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -982,7 +983,7 @@
 	ustring16(const uchar32_t* const c)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -996,7 +997,7 @@
 	ustring16(const uchar32_t* const c, u32 length)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -1010,7 +1011,7 @@
 	ustring16(const wchar_t* const c)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
@@ -1029,7 +1030,7 @@
 	ustring16(const wchar_t* const c, u32 length)
 	: array(0), allocated(0), used(0)
 	{
-#if __BIG_ENDIAN__
+#if __BYTE_ORDER == __BIG_ENDIAN
 		encoding = unicode::EUTFE_UTF16_BE;
 #else
 		encoding = unicode::EUTFE_UTF16_LE;
